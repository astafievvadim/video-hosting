services:
  auth_db:
    container_name: vh_auth_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: auth
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: auth
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432" # external port that we will be using : container port
    networks:
      - videohosting-net
    restart: unless-stopped

  user_db:
    container_name: vh_user_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: user_db
      POSTGRES_PASSWORD: user_db
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: user_db
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432" # external port that we will be using : container port
    networks:
      - videohosting-net
    restart: unless-stopped

  pgadmin:
    container_name: vh_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - /var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - videohosting-net
    restart: unless-stopped

  broker:
    image: apache/kafka:latest
    container_name: vh_kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3


networks:
  videohosting-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
